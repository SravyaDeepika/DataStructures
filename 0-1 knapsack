def knapSack(self,W, wt, val, n):
        dp=[[0 for i in range(W+1)] for j in range(n+1)]
        for i in range(1,n+1):
            for j in range(1,W+1):
                if wt[i-1] > j :
                    dp[i][j]=dp[i-1][j]
                else:
                    dp[i][j]=max(dp[i-1][j],val[i-1]+dp[i-1][j-wt[i-1]])
        #print(dp)
        return dp[-1][-1]
        # code here
TC : O(N*W)
SC : O(N*W) 
