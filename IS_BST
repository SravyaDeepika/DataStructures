Question :
Given the root of a binary tree, determine if it is a valid binary search tree (BST).

A valid BST is defined as follows:

The left subtree of a node contains only nodes with keys less than the node's key.
The right subtree of a node contains only nodes with keys greater than the node's key.
Both the left and right subtrees must also be binary search trees.

solution:
class Solution:
    def isValidBST(self, node: Optional[TreeNode]) -> bool:
        def valid(node,mini,maxi):
            if not node:
                return True
            if not(node.val>mini and node.val<maxi):
                return False
            return valid(node.left,mini,node.val) and valid(node.right,node.val,maxi)
        return valid(node,float("-inf"),float("inf")) 
        
  TC: O(N)
  SC: O(1)
