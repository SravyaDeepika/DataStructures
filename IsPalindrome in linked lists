class Solution:
    def isPalindrome(self, head: Optional[ListNode]) -> bool:
        #Finding middle of node
        if not head or not head.next:
            return 1
        slow=head;fast=head
        while(fast.next and fast.next.next):
            slow=slow.next
            fast=fast.next.next
        #reversing ll
        temp=slow.next
        print(head.val,slow.val)
        while(temp):
            temp1=slow.next
            slow.next=temp
            t2=temp.next
            temp.next=temp1
            temp=t2
        print(head.val,slow.next.val)
        if slow.next.next.next.next :
            slow.next.next.next.next=None
        #
        p1=head;p2=slow.next 
        while(p2):
            if p1.val==p2.val:
                p1=p1.next
                p2=p2.next
            else:
                return 0
        else:
            return 1
